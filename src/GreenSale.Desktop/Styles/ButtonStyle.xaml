<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    >

    <Style x:Key="MinimizedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="MinB"
                            Background="#F2B22D"
                            CornerRadius="10"
                            >
                        <Path Fill="White" Margin="3"
                              Data="{DynamicResource minimized}" Width="15" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MinB" Property="Background" Value="#DEA529"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="MinB" Property="Background" Value="#F2B22D"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MinB" Property="Background" Value="#C49124"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MaximizedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="MaxB"
                            Background="#2ABE3E"
                            CornerRadius="10">
                        <Path Fill="White" Margin="5"
                              Data="{DynamicResource maximized}" Width="15" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MaxB" Property="Background" Value="#24A636"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="MaxB" Property="Background" Value="#2ABE3E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MaxB" Property="Background" Value="#219430"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButtun" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="CloseB" 
                            Background="Red"
                            CornerRadius="10">
                        <Path Fill="White" Margin="6"
                              Data="{DynamicResource close}" Width="15" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CloseB" Property="Background" Value="#D8504B"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="CloseB" Property="Background" Value="#F05954"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CloseB" Property="Background" Value="#C14843"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UserButtun" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="CloseB" 
                            Background="{DynamicResource SecondaryBackground}"
                            CornerRadius="20">
                        <Path Fill="{DynamicResource PrimaryIconColor}" Margin="5"
                              Data="{DynamicResource User}" Width="20" Stretch="Uniform"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Width" Value="190"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="rbMenu" CornerRadius="15">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Path x:Name="icon" Grid.Column="0"
                                  Width="20" Height="20"
                                  Fill="{DynamicResource PrimarytextColor}"
                                  Data="{Binding Tag , RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                  Stretch="Uniform"/>

                            <TextBlock  Grid.Column="1" x:Name="tb"
                                        FontSize="{TemplateBinding FontSize}"
                                        Text="{TemplateBinding Content}"
                                        VerticalAlignment="Center"
                                        FontFamily="Arial"
                                        Foreground="{DynamicResource PrimarytextColor}"/>
                        </Grid>    
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="rbMenu" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rbMenu" Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                            <Setter TargetName="tb" Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource SecondaryTextColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="rbMenu" Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource SecondaryTextColor}"/>
                            <Setter TargetName="tb" Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value> 
        </Setter>
    </Style>

    <Style x:Key="SuccessButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="350"/>
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="28"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource SecondaryBorderColor}">
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#219241"/>
                                <GradientStop Color="#209240"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Label FontSize="24"
                               Margin="10 0"
                               FontFamily="Jetbrains Mono"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#049761"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#04BE7A"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#03774C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="categoryButtun" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="250"/>
        <Setter Property="Width" Value="370"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ProductButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B"  Background="Transparent"
                            CornerRadius="10">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="44*"/>
                                <RowDefinition Height="56*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0"
                                    BorderThickness="2 2 2 0"
                                    BorderBrush="{DynamicResource SecondaryBorderColor}"
                                    CornerRadius="8 8 0 0"
                                    Background="{DynamicResource SecondaryBackground}">
                                <Border Margin="0" CornerRadius="7 7 0 0">
                                    <Border.Background>
                                        <ImageBrush ImageSource="/Assets/Images/apple-tree-garden-green.jpg"/>
                                    </Border.Background>
                                   
                                </Border>
                            </Border>
                            <Border Grid.Row="1"
                                    CornerRadius="0 0 7 7"
                                    BorderThickness="2 0 2 2"
                                    BorderBrush="{DynamicResource SecondaryBorderColor}"
                                    Background="{DynamicResource SecondaryBackground}">
                                <StackPanel>
                                    <Border Height="40"
                                            Margin="10 0 10 0"
                                            BorderThickness="0 0 0 1"
                                            BorderBrush="{DynamicResource SelectedBorderColor}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Grid.Column="0" Margin="0 0 0 0"
                                                Orientation="Horizontal">
                                                <Path Width="15" Height="15"
                                                      Margin="0"
                                                      Data="{DynamicResource Location}"
                                                      Stretch="Uniform"
                                                      Fill="{DynamicResource PrimaryBackground}"/>
                                                <TextBlock Text="Andijon"
                                                           Margin="5 0 0 0"
                                                           VerticalAlignment="Center"
                                                           HorizontalAlignment="Center"
                                                           FontSize="12"
                                                           FontFamily="send-series"
                                                           Foreground="{DynamicResource FourthTextColor}"/>
                                            </StackPanel>
                                            <StackPanel Grid.Column="1" Margin="0"
                                                         Orientation="Horizontal">
                                                <Path Width="15" Height="15"
                                                      Margin="5"
                                                      Data="{DynamicResource Calendar}"
                                                      Stretch="Uniform"
                                                      Fill="{DynamicResource PrimaryBackground}"/>
                                                <TextBlock Text="21-iyun 2021"
                                                           VerticalAlignment="Center"
                                                           HorizontalAlignment="Center"
                                                           FontSize="12"
                                                           FontFamily="send-series"
                                                           Foreground="{DynamicResource FourthTextColor}"/>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                    <Border Height="35" HorizontalAlignment="Left"
                                            Margin="10 0 0 0">
                                        <TextBlock Text="Olma"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontSize="18"
                                                   FontFamily="send-series"
                                                   Foreground="{DynamicResource FifthTextColor}"/>
                                    </Border>
                                    <Border Height="30" HorizontalAlignment="Left"
                                            Margin="10 0 0 0">
                                        <TextBlock Text="Bog'da semeranka olma navi bor. 5 tonna chiqadi"
                                                   TextWrapping="Wrap"
                                                   Margin="0 0 7 0"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontSize="12"
                                                   FontFamily="send-series"
                                                   Foreground="{DynamicResource FourthTextColor}"/>
                                    </Border>
                                    <Border Height="30" HorizontalAlignment="Left"
                                            Margin="10 0 0 0">
                                        <TextBlock Text="15000  kg/so'm"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontSize="12"
                                                   FontFamily="send-series"
                                                   Foreground="{DynamicResource FifthTextColor}"/>
                                    </Border>
                                    <Border Height="30" Width="120"
                                            CornerRadius="7"
                                            Margin="10 5 0 0"
                                            HorizontalAlignment="Left"
                                            Background="{DynamicResource SecondaryBackground}"
                                            BorderThickness="1.5"
                                            BorderBrush="{DynamicResource FifthTextColor}">
                                        <Label Content="Read More"
                                               FontSize="12"
                                               Margin="0"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               FontFamily="send-series"
                                               Foreground="{DynamicResource FourthTextColor}"/>
                                    </Border>
                                </StackPanel>
                            </Border>
                        </Grid>     
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="BorderThickness" Value="2"/>
                            <Setter TargetName="B" Property="BorderBrush" Value="#049761"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#04BE7A"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#03774C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style x:Key="menuTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="40 30 0 15"/>
    </Style>

    <Style x:Key="menuButton" TargetType="Button">
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="15 0 15 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#f7f6f4"/>
                <Setter Property="Foreground" Value="#fb7657"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonIcon" TargetType="icon:PackIconMaterial">
        <Setter Property="Margin" Value="25 0 0 0"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>

    </Style>

    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Margin" Value="20 0 0 2 "/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>

    </Style>

    <Style x:Key="border" TargetType="Border">
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Padding" Value="20"/>
    </Style>

    <Style x:Key="titleText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="26"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#083353"/>
    </Style>

    <Style x:Key="titleSecoundText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="0 5"/>
        <Setter Property="Foreground" Value="#b7b7b7"/>
    </Style>

</ResourceDictionary>